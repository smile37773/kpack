/* 
 * kpack
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// KpackBuildV1alpha1BuildBuilderSpec
    /// </summary>
    [DataContract]
    public partial class KpackBuildV1alpha1BuildBuilderSpec :  IEquatable<KpackBuildV1alpha1BuildBuilderSpec>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KpackBuildV1alpha1BuildBuilderSpec" /> class.
        /// </summary>
        /// <param name="image">image.</param>
        /// <param name="imagePullSecrets">imagePullSecrets.</param>
        public KpackBuildV1alpha1BuildBuilderSpec(string image = default(string), List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets = default(List<IoK8sApiCoreV1LocalObjectReference>))
        {
            this.Image = image;
            this.ImagePullSecrets = imagePullSecrets;
        }
        
        /// <summary>
        /// Gets or Sets Image
        /// </summary>
        [DataMember(Name="image", EmitDefaultValue=false)]
        public string Image { get; set; }

        /// <summary>
        /// Gets or Sets ImagePullSecrets
        /// </summary>
        [DataMember(Name="imagePullSecrets", EmitDefaultValue=false)]
        public List<IoK8sApiCoreV1LocalObjectReference> ImagePullSecrets { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KpackBuildV1alpha1BuildBuilderSpec {\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("  ImagePullSecrets: ").Append(ImagePullSecrets).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KpackBuildV1alpha1BuildBuilderSpec);
        }

        /// <summary>
        /// Returns true if KpackBuildV1alpha1BuildBuilderSpec instances are equal
        /// </summary>
        /// <param name="input">Instance of KpackBuildV1alpha1BuildBuilderSpec to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KpackBuildV1alpha1BuildBuilderSpec input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Image == input.Image ||
                    (this.Image != null &&
                    this.Image.Equals(input.Image))
                ) && 
                (
                    this.ImagePullSecrets == input.ImagePullSecrets ||
                    this.ImagePullSecrets != null &&
                    input.ImagePullSecrets != null &&
                    this.ImagePullSecrets.SequenceEqual(input.ImagePullSecrets)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Image != null)
                    hashCode = hashCode * 59 + this.Image.GetHashCode();
                if (this.ImagePullSecrets != null)
                    hashCode = hashCode * 59 + this.ImagePullSecrets.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
