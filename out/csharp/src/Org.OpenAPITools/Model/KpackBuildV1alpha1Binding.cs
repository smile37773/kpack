/* 
 * kpack
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// KpackBuildV1alpha1Binding
    /// </summary>
    [DataContract]
    public partial class KpackBuildV1alpha1Binding :  IEquatable<KpackBuildV1alpha1Binding>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KpackBuildV1alpha1Binding" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected KpackBuildV1alpha1Binding() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="KpackBuildV1alpha1Binding" /> class.
        /// </summary>
        /// <param name="metadataRef">metadataRef.</param>
        /// <param name="name">name (required).</param>
        /// <param name="secretRef">secretRef.</param>
        public KpackBuildV1alpha1Binding(IoK8sApiCoreV1LocalObjectReference metadataRef = default(IoK8sApiCoreV1LocalObjectReference), string name = default(string), IoK8sApiCoreV1LocalObjectReference secretRef = default(IoK8sApiCoreV1LocalObjectReference))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new InvalidDataException("name is a required property for KpackBuildV1alpha1Binding and cannot be null");
            }
            else
            {
                this.Name = name;
            }
            
            this.MetadataRef = metadataRef;
            this.SecretRef = secretRef;
        }
        
        /// <summary>
        /// Gets or Sets MetadataRef
        /// </summary>
        [DataMember(Name="metadataRef", EmitDefaultValue=false)]
        public IoK8sApiCoreV1LocalObjectReference MetadataRef { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets SecretRef
        /// </summary>
        [DataMember(Name="secretRef", EmitDefaultValue=false)]
        public IoK8sApiCoreV1LocalObjectReference SecretRef { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KpackBuildV1alpha1Binding {\n");
            sb.Append("  MetadataRef: ").Append(MetadataRef).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  SecretRef: ").Append(SecretRef).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KpackBuildV1alpha1Binding);
        }

        /// <summary>
        /// Returns true if KpackBuildV1alpha1Binding instances are equal
        /// </summary>
        /// <param name="input">Instance of KpackBuildV1alpha1Binding to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KpackBuildV1alpha1Binding input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MetadataRef == input.MetadataRef ||
                    (this.MetadataRef != null &&
                    this.MetadataRef.Equals(input.MetadataRef))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.SecretRef == input.SecretRef ||
                    (this.SecretRef != null &&
                    this.SecretRef.Equals(input.SecretRef))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MetadataRef != null)
                    hashCode = hashCode * 59 + this.MetadataRef.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.SecretRef != null)
                    hashCode = hashCode * 59 + this.SecretRef.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
